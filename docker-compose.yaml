version: "3.7"
services:
  mongo-sales-replica-setup:
    container_name: mongo-setup
    build: ./mongosales/
    restart: on-failure
    networks:
      - netApplication
    volumes:
      - ./.docker/mongodb/scripts/mongosetup.sh:/scripts/mongosetup.sh
    entrypoint: ["bash", "/scripts/mongosetup.sh" ]
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  mongo1:
    hostname: 'mongo1'
    container_name: 'mongo1'
    build: ./mongosales/
    restart: 'on-failure'
    command: ["--port", "30001", "--keyFile", "/opt/keyfile", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    expose:
      - 30001
    ports:
      - 30001:30001
    networks:
      - netApplication
    volumes:
     - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: echo 'rs.status().ok' | mongo admin --port 30001 -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 30s
      start_period: 60s
    env_file:
      - .env
    #environment:
     # MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      #MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      #MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

  mongo2:
    hostname: 'mongo2'
    container_name: 'mongo2'
    build: ./mongosales/
    command: ["--port", "30002", "--keyFile", "/opt/keyfile", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    restart: 'on-failure'
    expose:
      - 30002
    ports:
      - 30002:30002
    networks:
      - netApplication
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 30s
      start_period: 60s
    #environment:
     # MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      #MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      #MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    depends_on:
      - mongo1

  mongo3:
    hostname: 'mongo3'
    container_name: 'mongo3'
    build: ./mongosales/
    command: ["--port", "30003", "--keyFile", "/opt/keyfile", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    restart: 'on-failure'
    expose:
      - 30003
    ports:
      - 30003:30003
    networks:
      - netApplication
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 30s
      start_period: 60s
    #environment:
     # MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      #MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      #MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    depends_on:
      - mongo1


networks:
  netApplication: